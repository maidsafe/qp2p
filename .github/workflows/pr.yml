# PR workflow.
#
# Runs full suite of checks, with warnings treated as errors.
# Gather code coverage stats and publish them on coveralls.io.

name: PR

on: pull_request

env:
  # Run all cargo commands with --verbose.
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1
  # Deny all compiler warnings.
  RUSTFLAGS: "-D warnings -C opt-level=2 -C codegen-units=8"

jobs:
  checks:
    if: github.repository_owner == 'maidsafe'
    name: Clippy & fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Install Rust and required components
      - uses: actions-rs/toolchain@v1
        name: Install Rust and required components
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      # Check if the code is formatted correctly.
      - name: Check formatting
        run: cargo fmt --all -- --check

      # Run Clippy.
      - name: Clippy checks
        run: cargo clippy --workspace --all-targets --all-features

  pr_size:
    name: Check total lines changed <= 200
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Get additions & deletions
      run: |
        additions=${{ github.event.pull_request.additions }}
        echo "additions=${additions}" >> $GITHUB_ENV
        deletions=${{ github.event.pull_request.deletions }}
        echo "deletions=${deletions}" >> $GITHUB_ENV

    - name: Show additions & deletions
      run : |
        echo "Additions: "
        echo $additions
        echo ""
        echo "Deletions: "
        echo $deletions

    - name: Calculate total lines changed
      run: |
        size=$(($additions + $deletions))
        echo "size=${size}" >> $GITHUB_ENV
        echo "Total lines changed: "
        echo $size

    - name: Fail if > 200
      run: |
        if [[ $size -gt 200 ]]
        then
          echo "Warning - total lines changed is greater than 200."
          echo "Please consider breaking this PR down."
          exit 1
        fi
  
  coverage:
    if: github.repository_owner == 'maidsafe'
    name: Code coverage check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Install Rust and required components
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      # Run cargo tarpaulin & push result to coveralls.io
      - name: rust-tarpaulin code coverage check
        uses: actions-rs/tarpaulin@master
        with:
          args: '-v --release --out Lcov -- --skip echo_service' # test would timeout on CI
      - name: Push code coverage results to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
          path-to-lcov: ./lcov.info
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  cargo-udeps:
    if: github.repository_owner == 'maidsafe'
    name: Unused dependency check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Install Rust and required components
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      # Install and run cargo udeps to find unused cargo dependencies
      - name: cargo-udeps duplicate dependency check
        run: |
          cargo install cargo-udeps --locked
          cargo +nightly udeps --all-targets

  cargo-deny:
    if: github.repository_owner == 'maidsafe'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # wget the shared deny.toml file from the QA repo
    - shell: bash
      run: wget https://raw.githubusercontent.com/maidsafe/QA/master/misc-scripts/deny.toml

    - uses: EmbarkStudios/cargo-deny-action@v1

  test:
    if: github.repository_owner == 'maidsafe'
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      # Run tests.
      - name: Run tests
        run: cargo test --release --workspace -- --skip echo_service # test would timeout on CI

  # Test publish using --dry-run.
  test-publish:
    if: github.repository_owner == 'maidsafe'
    name: Test Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Test publish
        run: cargo publish --dry-run
